---
- name: add hosts to control_nodes group
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    ansible_user: ec2-user
    groups: lab_hosts,control_nodes,tag_role_control,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('control' == item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - provision

- name: add hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    ansible_user: ec2-user
    groups: lab_hosts,managed_nodes,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('control' != item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - provision

- name: add windows workstation hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_windows_workstation,tag_role_windows,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('windows_workstation' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - addhost

- name: add web hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_web,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('web' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - addhost

- name: add windows nodes hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_windows_node,tag_role_windows,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('windows_node' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - addhost

- name: add cfme hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_cfme,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('cfme' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - addhost

- name: add tower hosts to groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_tower,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('tower' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - addhost

- name: add hosts to pod groups
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: "tag_pod_{{ item.invocation.module_args.instance_tags.pod }}"
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and (item.invocation.module_args.instance_tags.pod is defined)
  changed_when: no
  tags:
    - addhost

- name: add hosts to hosting_nodes group
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_hosting,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('hosting' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - provision
    - hosting

- name: add hosts to gitlab group
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_gitlab,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('gitlab' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - provision
    - gitlab

- name: add hosts to windows_domain_controller group
  add_host:
    name: "{{ item.tagged_instances[0].public_ip }}"
    ansible_host: "{{ item.tagged_instances[0].public_ip }}"
    groups: tag_role_windows_domain_controller,tag_role_windows,tag_app_management_lightbulb
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('windows_domain_controller' in item.invocation.module_args.instance_tags.role)
  changed_when: no
  tags:
    - provision
    - windows_domain_controller

- name: Set facts on instances
  set_fact:
    ec2_tag_pod: "{{ item.invocation.module_args.instance_tags.pod }}"
    ec2_tag_app: "{{ item.invocation.module_args.instance_tags.app }}"
    ec2_tag_role: "{{ item.invocation.module_args.instance_tags.role }}"
    ec2_ip_address: "{{ item.tagged_instances[0].public_ip }}"
    ec2_private_ip_address: "{{ item.tagged_instances[0].private_ip }}"
    ec2_private_dns_name: "{{ item.tagged_instances[0].private_dns_name }}"
    hostname: "{{ item.invocation.module_args.instance_tags.pod }}-{{ item.invocation.module_args.instance_tags.name.split('-')[-1] }}"
    username: "{{ item.invocation.module_args.instance_tags.pod }}"
  with_items: "{{ instances.results }}"
  delegate_to: "{{ item.tagged_instances[0].public_ip }}"
  delegate_facts: yes
  tags:
    - addhost

- name: Set additional facts on windows instances
  set_fact:
    ansible_user: Administrator
    ansible_port: 5986
    ansible_password: "{{ domain_admin_password }}"
    ansible_connection: winrm
    ansible_winrm_transport: basic
    ansible_winrm_server_cert_validation: ignore
  with_items: "{{ instances.results }}"
  when: ('management_lightbulb' in item.invocation.module_args.instance_tags.app) and ('windows' in item.invocation.module_args.instance_tags.role)
  delegate_to: "{{ item.tagged_instances[0].public_ip }}"
  delegate_facts: yes
  tags:
    - addhost